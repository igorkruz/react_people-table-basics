{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","PageNavLink/PageNavLink.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","PageNavLink","to","text","isActive","classNames","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","sex","slug","name","isWoman","classnames","PersonItem","person","born","died","motherName","mother","fatherName","father","useParams","userSlug","selectedTodo","PeopleTable","people","map","v4","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadingError","setIsLoadingError","useEffect","fetchedPeople","peopleWithParents","find","personFather","personMother","catch","finally","length","App","role","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b8e4a203.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(300)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classnames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  sex: string;\n  slug: string;\n  name: string;\n}\n\nexport const PersonLink: FC<Props> = ({ sex, slug, name }) => {\n  const isWoman = sex === 'f';\n\n  return (\n    <Link\n      className={classnames({ 'has-text-danger': isWoman })}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  person: Person\n}\n\nexport const PersonItem: FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    mother,\n    fatherName,\n    father,\n    slug,\n  } = person;\n\n  const { userSlug = '' } = useParams();\n\n  const selectedTodo = userSlug === slug;\n\n  return (\n    <>\n      <tr\n        data-cy=\"person\"\n        className={classnames({ 'has-background-warning': selectedTodo })}\n      >\n        <td>\n          <PersonLink\n            sex={sex}\n            slug={slug}\n            name={name}\n          />\n        </td>\n\n        <td>{sex}</td>\n        <td>{born}</td>\n        <td>{died}</td>\n        <td>\n          {mother\n            ? (\n              <PersonLink\n                sex={mother.sex}\n                slug={mother.slug}\n                name={mother.name}\n              />\n            )\n            : motherName || '-'}\n        </td>\n        <td>\n          {father\n            ? (\n              <PersonLink\n                sex={father.sex}\n                slug={father.slug}\n                name={father.name}\n              />\n            )\n            : fatherName || '-'}\n        </td>\n      </tr>\n\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport { FC } from 'react';\nimport { v4 } from 'uuid';\n\nimport { PersonItem } from '../PersonItem/PersonItem';\nimport { Person } from '../../types';\n\ninterface Props {\n  people: Person[]\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => (\n            <PersonItem\n              person={person}\n              key={v4()}\n            />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  const fetchPeople = () => {\n    getPeople()\n      .then((fetchedPeople) => {\n        const peopleWithParents = fetchedPeople.map(person => {\n          const father = fetchedPeople.find(personFather => (\n            personFather.name === person.fatherName\n          ));\n\n          const mother = fetchedPeople.find(personMother => (\n            personMother.name === person.motherName\n          ));\n\n          return { ...person, father, mother };\n        });\n\n        setPeople(peopleWithParents);\n      })\n      .catch(() => {\n        setIsLoadingError(true);\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (<Loader />)}\n\n          {isLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !isLoading && !isLoadingError && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (<PeopleTable people={people} />)}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { PageNavLink } from './PageNavLink/PageNavLink';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/\" text=\"Home\" />\n            <PageNavLink to=\"/people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/people\">\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n              <Route\n                path=\":userSlug\"\n                element={<PeoplePage />}\n              />\n            </Route>\n\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}